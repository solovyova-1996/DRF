{"version":3,"sources":["logo.svg","components/User.js","components/Footer.js","components/Todo.js","components/ProjectItems.js","components/LoginForm.js","components/TodoForm.js","components/ProjectForm.js","components/SearchProject.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","deleteUsers","username","firstName","lastName","email","onClick","id","className","type","UserList","users","Container","Row","Col","Table","striped","bordered","hover","size","map","Footer","style","marginTop","TodoItem","todoitem","deleteTodo","textTodo","createdAt","updatedAt","isActive","project","TodoList","todo","marginBottom","to","ProjectItem","todolist","forEach","push","nameProject","linkRepo","userId","find","ProjectItems","projects","useParams","filtered_project","filter","LoginForm","props","state","login","password","event","this","setState","target","name","value","console","log","get_token","preventDefault","Form","onSubmit","handleSubmit","Group","Label","marginLeft","placeholder","onChange","handleChange","React","Component","TodoForm","text_todo","createTodo","item","ProjectForm","name_project","link_repo","createProject","selectedOptions","i","length","multiple","handleUsersChange","SearchProject","toLowerCase","indexOf","searchProject","dataSearch","deleteProject","App","headers","get_headers","axios","delete","then","response","load_data","catch","error","data","post","get","load_projects","token","cookies","Cookies","set","set_token","alert","version","is_authenticated","get_token_from_storage","Navbar","Brand","src","logo","width","height","alt","Nav","marginRight","logout","exact","path","component","User","Todo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbd4d710.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst UserItem = ({user,deleteUsers}) => {\r\n    return (\r\n        <tr>\r\n            <td>{user.username}</td>\r\n            <td>{user.firstName}</td>\r\n            <td>{user.lastName}</td>\r\n            <td>{user.email}</td>\r\n             <td><button onClick={()=>deleteUsers(user.id)} className='btn-danger' type=\"button\">Удалить</button></td>\r\n        </tr>\r\n    )\r\n}\r\nconst UserList = ({users,deleteUsers}) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-6 col-sm-12'>\r\n                     <h3 className='text-center mt-3'>Пользователи</h3>\r\n                    <Table striped bordered hover size='sm' className='mt-4'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users.map((user) => <UserItem user={user} deleteUsers={deleteUsers}/>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\nexport default UserList;","import React from \"react\";\r\nimport {Navbar, Container, Nav, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <Container>\r\n            <Row style={{marginTop:'50px'}}>\r\n                <Col className='col-lg-12 col-sm-12  m-0'>\r\n                    <div  className='fixed-bottom bg-dark'>\r\n                        <p className='text-center text-light  '>Copyright &copy; 2021 </p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default Footer;","import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst TodoItem = ({todoitem,deleteTodo}) => {\r\n    return (\r\n        <tr>\r\n            <td>{todoitem.textTodo}</td>\r\n            <td>{todoitem.createdAt}</td>\r\n            <td>{todoitem.updatedAt}</td>\r\n            <td>{todoitem.isActive}</td>\r\n            <td>{todoitem.project}</td>\r\n            <td>{todoitem.user}</td>\r\n            <td><button onClick={()=>deleteTodo(todoitem.id)} className='btn-danger' type=\"button\">Удалить</button></td>\r\n        </tr>\r\n    )\r\n}\r\nconst TodoList = ({todo,deleteTodo}) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-6 col-sm-12'>\r\n                     <h3 className='text-center mt-3'>TODO-листы</h3>\r\n                    <Table striped bordered hover size='sm' className='mt-4 mb-4'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Text</th>\r\n                            <th>Create Date</th>\r\n                            <th>Update Date</th>\r\n                            <th>Active</th>\r\n                            <th>Project</th>\r\n                            <th>User</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {todo.map((todoitem) => <TodoItem todoitem={todoitem} deleteTodo={deleteTodo}/>)}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{marginBottom: '100px'}}><Link className=\"btn-success text-decoration-none p-1\" to=\"/todo/create\">Создать</Link></div>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default TodoList;","import React from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst ProjectItem = ({project, users, todo}) => {\r\n    const todolist = []\r\n    todo.forEach((todoitem) => {\r\n        if (todoitem.project == project.id) {\r\n            todolist.push(todoitem.textTodo)\r\n        }\r\n    })\r\n    return (\r\n\r\n        <ol>\r\n            <li><b>Name Project:</b> {project.nameProject}</li>\r\n            <li><b>Link Project:</b> {project.linkRepo}</li>\r\n            <li><b>Users:</b> {project.users.map((userId) => {\r\n                return users.find((user) => user.id == userId).username + ', '\r\n            })}</li>\r\n            <li><b>Todo:</b> {todolist.map((todo) => todo + ', ')}</li>\r\n        </ol>\r\n\r\n\r\n    )\r\n}\r\nconst ProjectItems = ({projects, users, todo}) => {\r\n    let {id} = useParams();\r\n    let filtered_project = projects.filter((project) => project.id == id)\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='col-lg-6 col-sm-12\r\n                mt-3'>\r\n                    <p> {filtered_project.map((project) => <ProjectItem project={project} users={users}\r\n                                                                        todo={todo}/>)}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default ProjectItems;","import React from 'react'\r\nimport {Col, Container, Form, Row,} from \"react-bootstrap\"\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {login: '', password: ''}  // состояние, в котором будут храниться логин и пароль пользователя\r\n    }\r\n\r\n    handleChange(event) { //сработает во время ыыода данных в поля login и password\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event) { // сработает во время нажатия на submit\r\n        console.log(this.state.login, this.state.password)\r\n        this.props.get_token(this.state.login, this.state.password)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row className='justify-content-center mt-4'>\r\n                        <Col className='col-lg-6 col-sm-6'>\r\n                            <Form className='bg-secondary bg-opacity-25  p-3'\r\n                                  onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Войдите в систему:</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Введите логин</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name='login'\r\n                                           placeholder='login'\r\n                                           value={this.state.login}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <Form.Label>Введите пароль</Form.Label>\r\n                                    <input style={{marginLeft: '6px'}} type='password' name='password'\r\n                                           placeholder='password'\r\n                                           value={this.state.password}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <input className='btn-success' type='submit' value='Войти'/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from \"react\";\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {project: '',user: '', text_todo:\"\",}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createTodo(this.state.project,this.state.user,this.state.text_todo)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div>\r\n                <Container>\r\n                    <Row className='justify-content-center mt-4'>\r\n                        <Col className='col-lg-6 col-sm-6'>\r\n                            <Form className='bg-success bg-opacity-25  p-3'\r\n                                  onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Создать TODO</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Текс TODO</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"text_todo\" value={this.state.text_todo}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <Form.Label>Выбрать пользователя</Form.Label>\r\n                                    <select className=\"form-control\" name=\"user\"\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.users.map((item) =>\r\n                            <option value={item.id}>\r\n                                {item.username}\r\n                            </option>)}\r\n                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                     <Form.Label>Выбрать проект</Form.Label>\r\n                                   <select className=\"form-control\" name=\"project\"\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.projects.map((item) =>\r\n                            <option value={item.id}>\r\n                                {item.nameProject}\r\n                            </option>)}\r\n                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <input className=\"btn-success\" type=\"submit\" value=\"Сохранить\"/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoForm","import React from \"react\";\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name_project: '', link_repo: '', users: \"\",}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createProject(this.state.name_project, this.state.link_repo, this.state.users)\r\n        event.preventDefault()\r\n    }\r\n\r\n    handleUsersChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            return;\r\n        }\r\n        let users = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            users.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row className='justify-content-center mt-4'>\r\n                        <Col className='col-lg-6 col-sm-6'>\r\n                            <Form className='bg-success bg-opacity-25  p-3'\r\n                                  onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Создать проект</Form.Label>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Название проекта</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"name_project\"\r\n                                           value={this.state.name_project}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 mt-3 text-center\">\r\n                                    <Form.Label className=''>Ссылка на репозиторий</Form.Label>\r\n                                    <input className='mt-2' style={{marginLeft: '10px'}} type=\"text\" name=\"link_repo\"\r\n                                           value={this.state.link_repo}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <Form.Label>Выбрать пользователей</Form.Label>\r\n                                    <select className=\"form-control\" name=\"users\" multiple\r\n                                            onChange={(event) => this.handleUsersChange(event)}>\r\n                                        {this.props.users.map((item) => <option\r\n                                            value={item.id}>{item.username}</option>)}\r\n                                    </select>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3 text-center\">\r\n                                    <input className=\"btn-success\" type=\"submit\" value=\"Сохранить\"/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectForm","import React from \"react\";\r\nimport {Container, Table, Row, Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SearchProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', projects: ''}\r\n    }\r\n\r\n\r\n    dataSearch(event) {\r\n        if (event.target.value) {\r\n            const name_project = event.target.value.toLowerCase()\r\n            const filter = this.props.projects.filter(project => project.nameProject.toLowerCase().indexOf(name_project) != -1)\r\n            this.props.searchProject(name_project, filter)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='col-lg-6 col-sm-12'>\r\n                        <h3 className='text-center mt-3'>Проекты</h3>\r\n                        <div className=\"searchbar form-group\"><input value={this.state.name} name='name' id='7'\r\n                                                                     type=\"text\" className=\"\"\r\n                                                                     placeholder=\"Поиск проекта по названию\"\r\n                                                                     onChange={(event) => this.dataSearch(event)}/>\r\n                        </div>\r\n                        <Table striped bordered hover size='sm' className='mt-4 mb-5'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Name Project</th>\r\n                                <th> Link</th>\r\n                                <th>Users</th>\r\n                                <th> </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.props.projects.map((project) =>\r\n                                <tr>\r\n                                    <td><Link to={`projects/${project.id}`}> {project.nameProject} </Link></td>\r\n                                    <td>{project.linkRepo}</td>\r\n                                    <td>{project.users}</td>\r\n                                    <td>\r\n                                        <button onClick={() => this.props.deleteProject(project.id)}\r\n                                                className='btn-danger' type=\"button\">Удалить\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{marginBottom: '100px'}}><Link className=\"btn-success text-decoration-none p-1\"\r\n                                                                   to=\"/projects/create\">Создать</Link></div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchProject\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport UserList from \"./components/User\";\nimport Footer from \"./components/Footer\";\nimport TodoList from \"./components/Todo\";\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport {Col, Container, Nav, Navbar, Row} from \"react-bootstrap\";\nimport ProjectItems from \"./components/ProjectItems\";\nimport LoginForm from \"./components/LoginForm\";\nimport TodoForm from \"./components/TodoForm\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport SearchProject from \"./components/SearchProject\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'users': [],\n            'todo': [],\n            'projects': [],\n            'token': '',\n            'username': ''\n\n        };\n\n    }\n\n    deleteTodo(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/todo/${id}`, {headers}).then(\n            response => {\n                this.load_data()\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({todo: []})\n        })\n    }\n\n    deleteProject(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/project/${id}`, {headers}).then(\n            response => {\n                this.load_data()\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n\n    deleteUsers(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/users/${id}`, {headers}).then(\n            response => {\n                this.load_data()\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({users: []})\n        })\n    }\n\n    createTodo(project, user, text_todo) {\n        const headers = this.get_headers()\n        const data = {project: project, user: user, text_todo: text_todo}\n        axios.post(`http://127.0.0.1:8000/api/todo/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n            console.log(error)\n            this.setState({todo: []})\n        })\n    }\n\n    createProject(name_project, link_repo, users) {\n        const headers = this.get_headers()\n        const data = {name_project: name_project, link_repo: link_repo, users: users}\n        axios.post(`http://127.0.0.1:8000/api/project/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n    searchProject(name_project, filter) {\n        const headers = this.get_headers()\n        axios.get(`http://127.0.0.1:8000/api/project/`,  {headers})\n            .then(response => {\n\n                this.load_projects(filter)\n            }).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n\n\n    set_token(token, username) { // получает токен и устанавливает его в состояние\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        cookies.set('username', username)\n        this.setState({'token': token}, () => this.load_data())\n    }\n\n    is_authenticated() { // проверяет авторизован пользователь или нет (есть что то в состоянии токена или нет)\n        return !!this.state.token\n    }\n\n    logout() { // устанавливает в состояние токена пкстое значение\n        this.set_token('')\n    }\n\n    get_token_from_storage() { // получает токен из cookie и уставливает его в состояние\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        const username = cookies.get('username')\n        this.setState({'token': token, 'username': username}, () => this.load_data())\n    }\n\n    get_token(username, password) {\n        this.setState({'username': username})\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {\n            username: username,\n            password: password\n\n        }).then(response => {\n            this.set_token(response.data['token'], username)\n        }).catch(error => alert('Неверный логин или пароль'))\n    }\n\n    get_headers(version) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json; version=${version}',\n            'Access-Control-Allow-Origin':'*'\n        }\n        if (this.is_authenticated()) {\n            headers['Authorization'] = 'Jwt-token ' + this.state.token\n        }\n        return headers\n    }\n    load_projects(projects){\n        this.setState(\n                    {'projects': projects}\n                )\n\n\n    }\n    load_data() {\n        const headers = this.get_headers()\n        console.log(headers)\n        axios.get('http://127.0.0.1:8000/api/users/', {headers}).then(\n            response => {\n                const users = response.data\n                this.setState(\n                    {'users': users}\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({users: []})\n        })\n        axios.get('http://127.0.0.1:8000/api/todo/', {headers}).then(\n            response => {\n                const todo = response.data\n                this.setState(\n                    {'todo': todo}\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({todo: []})\n        })\n        axios.get('http://127.0.0.1:8000/api/project/', {headers}).then(\n            response => {\n                const projects = response.data\n                this.setState(\n                    {'projects': projects}\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n\n    componentDidMount() {\n        this.get_token_from_storage()\n    };\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div className='bg-dark'>\n                        <Container>\n                            <Row>\n                                <Col className='col-lg-12 col-sm-12 '>\n                                    <Navbar>\n                                        <Navbar.Brand className='text-light'><img src={logo} width='30' height='30'\n                                                                                  className='d-inline-block '\n                                                                                  alt='logo'/>TODO</Navbar.Brand>\n                                        <Nav>\n                                            <li><Link style={{marginRight: '10px'}} className=\"text-light\"\n                                                      to='/users/'>Пользователи</Link></li>\n                                            <li><Link style={{marginRight: '10px'}} className=\"text-light mr-2\"\n                                                      to='/todo/'>TODO-листы</Link></li>\n                                            <li><Link style={{marginRight: '10px'}} className=\"text-light\"\n                                                      to='/projects/'>Проекты</Link></li>\n                                            <li>{this.is_authenticated() ?\n                                                <button style={{marginRight: '10px'}} className='btn-danger'\n                                                        onClick={() => this.logout()}> Выйти </button> :\n                                                <Link style={{marginRight: '10px'}}\n                                                      className=\"text-light btn-success text-decoration-none p-1\"\n                                                      to='/login/'>Войти</Link>}</li>\n                                            <li className=\"text-light\"> Пользователь: {this.is_authenticated() ? this.state.username : 'неавторизован'} </li>\n                                        </Nav>\n                                    </Navbar>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                    <Route exact path=\"/users/\" component={() => <UserList users={this.state.users}\n                                                                           deleteUsers={(id) => this.deleteUsers(id)}/>}/>\n                    <Route exact path=\"/todo/\" component={() => <TodoList todo={this.state.todo}\n                                                                          deleteTodo={(id) => this.deleteTodo(id)}/>}/>\n                    {/*<Route exact path=\"/projects/\" component={() => <ProjectList projects={this.state.projects}*/}\n                    {/*                                                             deleteProject={(id) => this.deleteProject(id)}/>}/>*/}\n<Route exact path=\"/projects/\" component={() => <SearchProject  projects={this.state.projects}\n                                                                                 deleteProject={(id) => this.deleteProject(id)}  searchProject={(name_project, filter)=>this.searchProject(name_project, filter)}/>}/>\n                    <Route exact path=\"/projects/projects/:id\"\n                           component={() => <ProjectItems projects={this.state.projects} users={this.state.users}\n                                                          todo={this.state.todo}/>}/>\n\n                    <Route exact path=\"/todo/create\"\n                           component={() => <TodoForm users={this.state.users} projects={this.state.projects}\n                                                      createTodo={(project, user, text_todo) => this.createTodo(project, user, text_todo)}/>}/>\n                     <Route exact path=\"/projects/create\"\n                           component={() => <ProjectForm users={this.state.users}\n                                                      createProject={(name_project, link_repo, users) => this.createProject(name_project, link_repo, users)}/>}/>\n                    <Route exact path=\"/login/\" component={() => <LoginForm\n                        get_token={(username, password) => this.get_token(username, password)}\n                    />}/>\n\n                </BrowserRouter>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}